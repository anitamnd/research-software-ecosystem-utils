name: 'import openebench'
description: 'openebench bulk import'
inputs:
  repo-user:  # id of input
    description: 'User that commits modifications'
    required: true
  repo-token:
    description: 'GitHub token to commit modifications'
    required: true
runs:
  using: "composite"
  steps:
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.7"
    - uses: actions/checkout@v2
    - name: Install dependencies
      run:
        pip install -r ${{ github.action_path }}/requirements.txt
      shell: bash
    - name: import openebench data using the API
      run: |
        python ${{ github.action_path }}/openebench-import.py
      shell: bash
    - name: remove unnecessary fields from json with jq and sponge
      run: |
        sudo apt-get install moreutils
        FILES='data/*/*.oeb.metrics.json'
        for f in $FILES; do jq 'map(del(.["project"]["website"]["last_check", "access_time", "last_month_access", "half_year_stat"]))|map(del(.["@timestamp"]))' $f | sponge $f; echo "processed $f file!"; done
    - name: reformat json to a predictable format with jq and sponge
      run: |
        sudo apt-get install moreutils
        FILES='data/*/*.oeb.metrics.json'
        for f in $FILES; do jq --indent 4 'walk( if type == "array" then sort else . end )'  $f | sponge $f; echo "processed $f file!"; done
      shell: bash
    - name: commit new data and push to PR
      env:
        GITHUB_USER: ${{ inputs.repo-user }}
        GITHUB_TOKEN: ${{ inputs.repo-token }}
      run: |  
        git config --local user.email "tpe-bot@github.com"
        git config --local user.name "Tools Platform Ecosystem bot"
        git add .
        if git commit -m "import OpenEBench data on $(date)"; then
          echo "git push should happen"
          echo "successfully imported new OpenEBench data"
        else
          echo "no change in OpenEBench to import, exiting"
        fi
      shell: bash
